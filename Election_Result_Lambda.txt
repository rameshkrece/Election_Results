import json
import csv
import boto3
import urllib.parse
import awswrangler as wr
import openpyxl
import pandas as pd
import mysql.connector
def lambda_handler(event, context):
    s3_cient=boto3.client('s3')
    files = []
    if event:
        bucket = event['Records'][0]['s3']['bucket']['name']
        key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')
        df = wr.s3.read_csv(path='s3://electionresult1/',path_suffix=['.csv'])
        blankIndex=[''] * len(df)
        df.index=blankIndex
        dfcsv=df.values
        listcsv=dfcsv.tolist()
        for item in listcsv:
            files.append(item)
        df1 = wr.s3.read_json(path='s3://electionresult1/',orient='records',path_suffix=['.json'])
        blankIndex=[''] * len(df1)
        df1.index=blankIndex
        df1json=df1.values
        listjson=df1json.tolist()
        for item in listjson:
            files.append(item)
        df2 = wr.s3.read_excel(path='s3://electionresult1/Election Result_Excel.xlsx',engine='openpyxl')
        blankIndex=[''] * len(df2)
        df2.index=blankIndex
        df2excel=df2.values
        listexcel=df2excel.tolist()
        for item in listexcel:
            files.append(item)
        print(files)
        connection = mysql.connector.connect(host='electionresult1.clepjdgya9gn.us-east-1.rds.amazonaws.com',
                                         database='electionresult1',
                                         port='3306',
                                         user='admin',
                                         passwd='afx9EHIec0pFUwqNammj')
        
        mysql_insert = """insert into election_result(State,Party,Total_no_of_seats,Won,Loss,lea,Previous_Election_won,Percentage_of_change,Total_Votes) values(%s,%s,%s,%s,%s,%s,%s,%s,%s)"""
        cursor = connection.cursor()
        cursor.executemany(mysql_insert, files)
        connection.commit()
        return {
        'statusCode': 200,
        'body': json.dumps('Hello from Lambda!')
        }        